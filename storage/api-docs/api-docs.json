{
    "openapi": "3.0.0",
    "info": {
        "title": "Template API",
        "contact": {
            "name": "Development Team",
            "email": "dev@invogeservices.com"
        },
        "version": "1.0"
    },
    "servers": [
        {
            "url": "https://api.template.com",
            "description": "Live OpenApi Server"
        },
        {
            "url": "http://localhost:9400",
            "description": "Local PMAT Server"
        }
    ],
    "paths": {
        "/notifications": {
            "get": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Get user notifications",
                "operationId": "App\\Http\\Controllers\\Account\\NotificationController::getNotifications",
                "responses": {
                    "401": {
                        "description": "Authorization required"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Update user notification status",
                "operationId": "App\\Http\\Controllers\\Account\\NotificationController::mark",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "IDs of notifications",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {}
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Either of read or unread",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful"
                    },
                    "401": {
                        "description": "Authorization required"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/notifications/{id}": {
            "delete": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Delete user notification",
                "operationId": "App\\Http\\Controllers\\Account\\NotificationController::delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of notification",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful"
                    },
                    "401": {
                        "description": "Authorization required"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Toggle user notification status",
                "operationId": "App\\Http\\Controllers\\Account\\NotificationController::toggle",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of notification",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful"
                    },
                    "401": {
                        "description": "Authorization required"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/user": {
            "patch": {
                "tags": [
                    "User"
                ],
                "summary": "Update user detail",
                "operationId": "App\\Http\\Controllers\\Account\\UserController::updateUser",
                "parameters": [
                    {
                        "name": "first_name",
                        "in": "query",
                        "description": "first Name of the user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "last_name",
                        "in": "query",
                        "description": "Last Name of the User",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "other_names",
                        "in": "query",
                        "description": "Other Name of User",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Email of User",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "username",
                        "in": "query",
                        "description": "Username of the user",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "phone",
                        "in": "query",
                        "description": "Phone of the user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "gender",
                        "in": "query",
                        "description": "Gender of the User",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address",
                        "in": "query",
                        "description": "Address of the User",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "403": {
                        "description": "Error: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/user/password": {
            "patch": {
                "tags": [
                    "User"
                ],
                "summary": "Update user password",
                "operationId": "App\\Http\\Controllers\\Account\\UserController::updatePassword",
                "parameters": [
                    {
                        "name": "password",
                        "in": "query",
                        "description": "Password",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password_confirmation",
                        "in": "query",
                        "description": "Password Confirmation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Error: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/user/": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get current User ",
                "operationId": "App\\Http\\Controllers\\Account\\UserController::fetchUser",
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Error: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Delete a user",
                "operationId": "App\\Http\\Controllers\\Account\\UserController::deleteUser",
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Error: Forbidden"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login a user and obtain token",
                "operationId": "App\\Http\\Controllers\\Auth\\AuthController::login",
                "parameters": [
                    {
                        "name": "email_or_username",
                        "in": "query",
                        "description": "User's email or username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "User's password",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Error: Page not found"
                    },
                    "422": {
                        "description": "Error: Bad request"
                    },
                    "401": {
                        "description": "Error: Unauthorized request"
                    }
                }
            }
        },
        "/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Registers a user",
                "operationId": "App\\Http\\Controllers\\Auth\\AuthController::registerUser",
                "parameters": [
                    {
                        "name": "first_name",
                        "in": "query",
                        "description": "First name of the user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "last_name",
                        "in": "query",
                        "description": "Last Name of the User",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "other_names",
                        "in": "query",
                        "description": "Other Name of User",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Email of User",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "username",
                        "in": "query",
                        "description": "Username of the user",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "Password",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password_confirmation",
                        "in": "query",
                        "description": "Password Confirmation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "phone",
                        "in": "query",
                        "description": "Phone of the user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "terms",
                        "in": "query",
                        "description": "Terms and condition ",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Destroys user token",
                "operationId": "App\\Http\\Controllers\\Auth\\AuthController::logout",
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/password/forgot": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Send token to user's email for verification",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "User's email",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Error: Unauthorized request"
                    }
                }
            }
        },
        "/forgot/reset": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Reset user's password using token sent to email",
                "operationId": "/forgot/reset",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "User's email Address",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Token sent to user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "New password",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password_confirmation",
                        "in": "query",
                        "description": "Password confirmation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a success response and an API token",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Bad request. When the merchant name(account_id) is not a word or mis-spelt."
                    },
                    "401": {
                        "description": "Error: Bad request. When the user does not exist."
                    }
                }
            }
        },
        "/": {
            "get": {
                "tags": [
                    "Extras"
                ],
                "summary": "Ping",
                "description": "For Heath check: perfect for testing service health in production",
                "operationId": "App\\Http\\Controllers\\ExampleController::ping",
                "responses": {
                    "200": {
                        "description": "Service is active",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "apiAuth": {
                "type": "apiKey",
                "description": "Enter API token, prefixed with 'Bearer' and a space. e.g Bearer 77e1c83b-7bb0-437b-bc50-a7a58e5660ac",
                "name": "Authorization",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "Everything about authentication"
        },
        {
            "name": "User",
            "description": "User details"
        },
        {
            "name": "Notifications",
            "description": "User notifications"
        },
        {
            "name": "Extras",
            "description": "Uncategorized"
        },
        {
            "name": "Admin",
            "description": "Admin routes (Not in use)"
        }
    ]
}